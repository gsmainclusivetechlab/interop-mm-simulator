# Interop Mobile Money Simulator CircleCI

version: 2.1

orbs:
  coverage-reporter: codacy/coverage-reporter@10.0.3

executors:
  # Define a machine who has support for docker compose 3.7
  standard:
    machine:
      image: ubuntu-1604:201903-01
    working_directory: /home/circleci/project

  test:
    docker:
      - image: gsmainclusivetechlab/interop-php-fpm:latest
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_HOST: '%'
          MYSQL_ROOT_PASSWORD: developer
          MYSQL_DATABASE: itp-mmo-api-control
          MYSQL_USER: itp-mmo-api-control
          MYSQL_PASSWORD: developer
    working_directory: ~/repo

jobs:
  # TODO: The build jobs below do now leverage caching from one run to the next
  # TODO: consider that this is generally quite slow. Not sure we have enough parallelism to benefit really!
  build-php:
    executor: standard
    steps:
      - checkout
      - run:
          name: Copy configuration files
          command: cp ./src/.env.example ./src/.env
      - run:
          name: Build Docker Image
          command: |
            echo "Building Docker Image: gsmainclusivetechlab/interop-mm-simulator/php:$CIRCLE_SHA1"
            docker build -t gsmainclusivetechlab/interop-mm-simulator/php:$CIRCLE_SHA1 -f ./src/build/Dockerfile.php ./src
      - run:
          name: Save docker images to workspace
          command: |
            docker save gsmainclusivetechlab/interop-mm-simulator/php:$CIRCLE_SHA1 | gzip > /tmp/image-php.tgz
      - persist_to_workspace:
          root: /tmp
          paths:
            - ./image-php.tgz

      - restore_cache:
          keys:
            - composer-v1-{{ checksum "src/composer.lock" }}
            - composer-v1-

  build-web:
    executor: standard
    steps:
      - checkout
      - run:
          name: Copy configuration files
          command: cp ./src/.env.example ./src/.env
      - run:
          name: Build Docker Image
          command: |
            echo "Building Docker Image: gsmainclusivetechlab/interop-mm-simulator/web:$CIRCLE_SHA1"
            docker build -t gsmainclusivetechlab/interop-mm-simulator/web:$CIRCLE_SHA1 -f ./src/build/Dockerfile.web ./src
      - run:
          name: Save docker images to workspace
          command: |
            docker save gsmainclusivetechlab/interop-mm-simulator/web:$CIRCLE_SHA1 | gzip > /tmp/image-web.tgz
      - persist_to_workspace:
          root: /tmp
          paths:
            - ./image-web.tgz

  build-mysqldb:
    executor: standard
    steps:
      - checkout
      - run:
          name: Copy configuration files
          command: cp ./src/.env.example ./src/.env
      - run:
          name: Build Docker Image
          command: |
            echo "Building Docker Image: gsmainclusivetechlab/interop-mm-simulator/mysqldb:$CIRCLE_SHA1"
            docker build -t gsmainclusivetechlab/interop-mm-simulator/mysqldb:$CIRCLE_SHA1 -f ./src/build/Dockerfile.mysqldb ./src
      - run:
          name: Save docker images to workspace
          command: |
            docker save gsmainclusivetechlab/interop-mm-simulator/mysqldb:$CIRCLE_SHA1 | gzip > /tmp/image-mysqldb.tgz
      - persist_to_workspace:
          root: /tmp
          paths:
            - ./image-mysqldb.tgz

  test:
    executor: standard
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - run:
          name: Load the pre-built images from workspace
          command: |
            docker load -i /tmp/image-php.tgz
            docker load -i /tmp/image-mysqldb.tgz
      - run:
          name: Copy configuration files
          command: cp .env.example .env
      - run:
          name: Run Tests and get coverage
          # N.B. We move the `html` to `src` directory so paths are mapped correctly in coverage report
          command: |
            docker-compose run -v /tmp/results:/tmp/results php bash -c "\
              WAIT_HOSTS=mysqldb:3306 /wait
              cd ..
              mv html src
              cd src
              phpdbg -qrr vendor/bin/phpunit \
                --coverage-html /tmp/results/coverage-report-html \
                --coverage-clover /tmp/results/coverage-report-clover/clover.xml \
            "
      - coverage-reporter/send_report:
          coverage-reports: /tmp/results/coverage-report-clover/clover.xml
          project-token: $CODACY_PROJECT_TOKEN

      - run:
          name: Copy codacy json report to artifact
          command: sudo cp /var/tmp/codacy-coverage-*.json /tmp/results/
      - store_test_results:
          path: /tmp/results
      - store_artifacts:
          path: /tmp/results

  publish:
    executor: standard
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - run:
          name: Load the pre-built images from workspace
          command: |
            docker load -i /tmp/image-php.tgz
            docker load -i /tmp/image-mysqldb.tgz
            docker load -i /tmp/image-web.tgz
      - run:
          name: Re-tag pre built images
          command: |
            docker tag gsmainclusivetechlab/interop-mm-simulator/php:$CIRCLE_SHA1  gsmainclusivetechlab/interop-mm-simulator/php:$CIRCLE_TAG
            docker tag gsmainclusivetechlab/interop-mm-simulator/web:$CIRCLE_SHA1  gsmainclusivetechlab/interop-mm-simulator/web:$CIRCLE_TAG
            docker tag gsmainclusivetechlab/interop-mm-simulator/mysqldb:$CIRCLE_SHA1  gsmainclusivetechlab/interop-mm-simulator/mysqldb:$CIRCLE_TAG
      - run:
          name: Login to Docker Hub
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Publish Docker images $CIRCLE_TAG
          command: |
            echo "Publishing gsmainclusivetechlab/interop-mm-simulator/php:$CIRCLE_TAG"
            docker push gsmainclusivetechlab/interop-mm-simulator/php:$CIRCLE_TAG
            echo "Publishing gsmainclusivetechlab/interop-mm-simulator/web:$CIRCLE_TAG"
            docker push gsmainclusivetechlab/interop-mm-simulator/web:$CIRCLE_TAG
            echo "Publishing gsmainclusivetechlab/interop-mm-simulator/mysqldb:$CIRCLE_TAG"
            docker push gsmainclusivetechlab/interop-mm-simulator/mysqldb:$CIRCLE_TAG

  deploy:
    executor: standard
    steps:
      - checkout
      - attach_workspace:
          at: /tmp
      - run:
          name: Load the pre-built images from workspace
          command: |
            docker load -i /tmp/image-php.tgz
            docker load -i /tmp/image-mysqldb.tgz
            docker load -i /tmp/image-web.tgz
      - run:
          name: Deploy images to EC2
          command: echo "Coming soon!"

  

workflows:
  version: 2
  build_and_test:
    jobs:
      - build-php
      - build-web
      - build-mysqldb
      - test:
          requires:
            - build-mysqldb
            - build-php
      - await-approval:
          type: approval 
          requires: 
            - test
            - build-php
            - build-web
            - build-mysqldb
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - publish:
          requires: 
            - await-approval
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - deploy:
          requires: 
            - await-approval
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/

